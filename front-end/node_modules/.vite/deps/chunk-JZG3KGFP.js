import {
  require_jsx_runtime
} from "./chunk-IULEFUF5.js";
import {
  require_react
} from "./chunk-I773Y2XN.js";
import {
  __toESM
} from "./chunk-LK32TJAX.js";

// node_modules/tslib/tslib.es6.mjs
function __rest(s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
    t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}

// node_modules/@patternfly/react-icons/dist/esm/createIcon.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_react = __toESM(require_react());
var currentId = 0;
function createIcon({ name, xOffset = 0, yOffset = 0, width, height, svgPath }) {
  var _a;
  return _a = class SVGIcon extends import_react.Component {
    constructor() {
      super(...arguments);
      this.id = `icon-title-${currentId++}`;
    }
    render() {
      const _b = this.props, { title, className } = _b, props = __rest(_b, ["title", "className"]);
      const classes = className ? `pf-v6-svg ${className}` : "pf-v6-svg";
      const hasTitle = Boolean(title);
      const viewBox = [xOffset, yOffset, width, height].join(" ");
      return (0, import_jsx_runtime.jsxs)("svg", Object.assign({ className: classes, viewBox, fill: "currentColor", "aria-labelledby": hasTitle ? this.id : null, "aria-hidden": hasTitle ? null : true, role: "img", width: "1em", height: "1em" }, props, { children: [hasTitle && (0, import_jsx_runtime.jsx)("title", { id: this.id, children: title }), (0, import_jsx_runtime.jsx)("path", { d: svgPath })] }));
    }
  }, _a.displayName = name, _a;
}

export {
  __rest,
  __awaiter,
  createIcon
};
//# sourceMappingURL=chunk-JZG3KGFP.js.map
